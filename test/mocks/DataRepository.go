// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	data "github.com/hectorgabucio/genity-hector/internal/data"
	mock "github.com/stretchr/testify/mock"
)

// DataRepository is an autogenerated mock type for the DataRepository type
type DataRepository struct {
	mock.Mock
}

// Add provides a mock function with given fields: _a0
func (_m *DataRepository) Add(_a0 *data.Data) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*data.Data) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CloseConn provides a mock function with given fields:
func (_m *DataRepository) CloseConn() {
	_m.Called()
}

// Get provides a mock function with given fields: dataWhere
func (_m *DataRepository) Get(dataWhere *data.Data) (*data.Data, error) {
	ret := _m.Called(dataWhere)

	var r0 *data.Data
	if rf, ok := ret.Get(0).(func(*data.Data) *data.Data); ok {
		r0 = rf(dataWhere)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*data.Data)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*data.Data) error); ok {
		r1 = rf(dataWhere)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
